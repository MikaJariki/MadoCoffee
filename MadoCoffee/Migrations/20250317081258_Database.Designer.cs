// <auto-generated />
using System;
using MadoCoffee;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MadoCoffee.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250317081258_Database")]
    partial class Database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MadoCoffee.Models.Bill", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("MadoCoffee.Models.Customer", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("MadoCoffee.Models.Dish", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("MadoCoffee.Models.DishMenuMapping", b =>
                {
                    b.Property<long>("DishID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<long>("MenuID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DishID", "MenuID");

                    b.HasIndex("MenuID");

                    b.ToTable("DishMenuMapping");
                });

            modelBuilder.Entity("MadoCoffee.Models.Employee", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<long>("RoleID")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.HasIndex("RoleID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("MadoCoffee.Models.EmployeeShiftMapping", b =>
                {
                    b.Property<long>("ShiftID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(2);

                    b.Property<long>("EmpID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("WorkDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ShiftID", "EmpID");

                    b.HasIndex("EmpID");

                    b.ToTable("EmployeeShiftMapping");
                });

            modelBuilder.Entity("MadoCoffee.Models.Ingredient", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("UnitID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("UnitID");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("MadoCoffee.Models.Menu", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("MadoCoffee.Models.Order", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("BillID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("BookingTime")
                        .HasColumnType("datetime");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomerID")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("TableID")
                        .HasColumnType("bigint");

                    b.Property<TimeSpan?>("TimeStampEnd")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("TimeStampStart")
                        .HasColumnType("time");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("BillID");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("CustomerID");

                    b.HasIndex("TableID");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MadoCoffee.Models.OrderDishMapping", b =>
                {
                    b.Property<long>("OrderID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    b.Property<long>("DishID")
                        .HasColumnType("bigint")
                        .HasColumnOrder(1);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderID", "DishID");

                    b.HasIndex("DishID");

                    b.ToTable("OrderDishMapping");
                });

            modelBuilder.Entity("MadoCoffee.Models.Role", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("MadoCoffee.Models.Shift", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("ID");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("MadoCoffee.Models.Supplier", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Representative")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("MadoCoffee.Models.SupplierIngredientMapping", b =>
                {
                    b.Property<long>("SupID")
                        .HasColumnType("bigint");

                    b.Property<long>("IngID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("SupID", "IngID", "TransactionDate");

                    b.HasIndex("IngID");

                    b.ToTable("SupplierIngredientMapping");
                });

            modelBuilder.Entity("MadoCoffee.Models.Table", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("MadoCoffee.Models.Unit", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("MadoCoffee.Models.Bill", b =>
                {
                    b.HasOne("MadoCoffee.Models.Customer", "Customer")
                        .WithMany("Bills")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("MadoCoffee.Models.DishMenuMapping", b =>
                {
                    b.HasOne("MadoCoffee.Models.Dish", "Dish")
                        .WithMany("DishMenuMappings")
                        .HasForeignKey("DishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MadoCoffee.Models.Menu", "Menu")
                        .WithMany("DishMenuMappings")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("MadoCoffee.Models.Employee", b =>
                {
                    b.HasOne("MadoCoffee.Models.Role", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("MadoCoffee.Models.EmployeeShiftMapping", b =>
                {
                    b.HasOne("MadoCoffee.Models.Employee", "Employee")
                        .WithMany("EmployeeShiftMappings")
                        .HasForeignKey("EmpID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MadoCoffee.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("MadoCoffee.Models.Ingredient", b =>
                {
                    b.HasOne("MadoCoffee.Models.Unit", "Unit")
                        .WithMany("Ingredients")
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("MadoCoffee.Models.Order", b =>
                {
                    b.HasOne("MadoCoffee.Models.Bill", "Bill")
                        .WithMany("Orders")
                        .HasForeignKey("BillID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("MadoCoffee.Models.Employee", "CreatedByEmployee")
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MadoCoffee.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MadoCoffee.Models.Table", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MadoCoffee.Models.Employee", "UpdatedByEmployee")
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Bill");

                    b.Navigation("CreatedByEmployee");

                    b.Navigation("Customer");

                    b.Navigation("Table");

                    b.Navigation("UpdatedByEmployee");
                });

            modelBuilder.Entity("MadoCoffee.Models.OrderDishMapping", b =>
                {
                    b.HasOne("MadoCoffee.Models.Dish", "Dish")
                        .WithMany("OrderDishMappings")
                        .HasForeignKey("DishID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MadoCoffee.Models.Order", "Order")
                        .WithMany("OrderDishMappings")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MadoCoffee.Models.SupplierIngredientMapping", b =>
                {
                    b.HasOne("MadoCoffee.Models.Ingredient", "Ingredient")
                        .WithMany("SupplierIngredientMappings")
                        .HasForeignKey("IngID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MadoCoffee.Models.Supplier", "Supplier")
                        .WithMany("SupplierIngredientMappings")
                        .HasForeignKey("SupID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("MadoCoffee.Models.Bill", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MadoCoffee.Models.Customer", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MadoCoffee.Models.Dish", b =>
                {
                    b.Navigation("DishMenuMappings");

                    b.Navigation("OrderDishMappings");
                });

            modelBuilder.Entity("MadoCoffee.Models.Employee", b =>
                {
                    b.Navigation("EmployeeShiftMappings");
                });

            modelBuilder.Entity("MadoCoffee.Models.Ingredient", b =>
                {
                    b.Navigation("SupplierIngredientMappings");
                });

            modelBuilder.Entity("MadoCoffee.Models.Menu", b =>
                {
                    b.Navigation("DishMenuMappings");
                });

            modelBuilder.Entity("MadoCoffee.Models.Order", b =>
                {
                    b.Navigation("OrderDishMappings");
                });

            modelBuilder.Entity("MadoCoffee.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("MadoCoffee.Models.Supplier", b =>
                {
                    b.Navigation("SupplierIngredientMappings");
                });

            modelBuilder.Entity("MadoCoffee.Models.Table", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("MadoCoffee.Models.Unit", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
